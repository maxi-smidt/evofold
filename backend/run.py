import numpy as np
import gc

from backend.algorithms.params.self_adaptive_es_params import SelfAdaptiveESParams
from backend.algorithms.self_adaptive_es import SelfAdaptiveES
from backend.structure.protein import Protein


def log(msg: str):
    with open('log.txt', 'a') as f:
        f.write(msg + '\n')
    print(msg)

def measure_es(method: str, params: SelfAdaptiveESParams, sequence: str):
    for i in range(5):
        es = SelfAdaptiveES(params)
        es.run(sequence)
        log(f"{method};{len(sequence)};{np.mean(es.TIMES)};{np.std(es.TIMES)}")
        del es
        gc.collect()

def run_measurement(sequence: str):
    log(f"seq: {len(sequence)} {sequence}")
    log(f"starting amber")
    measure_es('amber', SelfAdaptiveESParams(generations=10), sequence)
    #log(f"starting charmm")
    #measure_es('charmm', SelfAdaptiveESParams(force_field='charmm', generations=10), sequence)
    Protein.SIMULATION_CACHE = {}

s1 = 'RNTSEIVTFH'
s2 = 'VGACICLQRYASGDRIKHSCHHFYMGRYYDNSFCGQEVHKDDLTFWNGGP'
s3 = 'PEMKTREYVRDLMHYWHDDEHYDCTGFERKRPNAFSWFMAEPTCKHVMGYTCNHRPPDQETPCECKPHGMREWRAVWGNCIKFNMMVFQMDWQTKHEPVA'
s4 = 'KCWGKGWKGPWAHDYASEFKKMSSSLYTDSTTNRWCKCIKAQVGKTAMGFIEMKKSFVYQHYHWCTCEKCSTCVKFQMGCAHFCVRFEPGAPMLQGVSSRNDRISPCSITWPMMHMGRMGHGNGRHKHNCPCRFEDYDQATTSHPNIISSTMWRRYWPFHAHGQFDVPANFTPTFNAEDRTCYLPSYDYPCFTLIQLYQR'
s5 = 'IHSYEYEEDCQRTAQKKAVYSPIPAWYIGPWIAWYHQRPKDFDLCLPCNVFAWSERNHTRHKFNISLHGVFTVWERCQKIMPTYSQQITLNNLRSCFNDTKWSFYNWLIWTWYCHRIITKAHQWRSRMHYMWCCLAIVFWCTYGYEEIPTQMCTPCPASPYASSHWMDVSKMYDIKKHYIFATVYLHSPCQFDWERLEIEQRGRWGHGEQVLHHAVGWKEDDKWEQKFPSGCSSTACGGCSEFNIFFARCYLFVVVHHDETLVVQHEWPFWQNGKSYPFMGLAKENIEQGRVCYSKRMMVHLDKGITDTCQDCTVDMVSVTIQEFRPDAKCCYTMIACCQCSTNESQIFAVAYRNSQNGRYSGLWECRPWTEWAANSYLTKLQTHISWWRIYITMCWDILTCDMKEDITWVKGGRFIDGPNQPPQADEGTALERLQYHIGIYSSWPFMHYGRVLVHMYQNIPLQHNKHMFPSNRPHNWYFNMDFWSSNRPINRHAKEAIH'
s6 = 'FCPQILGTHKLVRIQGNTRMSDSPFHTQWSRWKRKMQDFFLQPRPHGLISAHMHLHLWTVLGSNACNEFKPNCRMAQEQHEQCCRDQNRFMGIMIIEIKTQCNFNFEIWLQALAYWPCHEFQKRRCWYLRKKAYIVYQAVCYSQLQCQMVNAYPKAYAGPDFYGYQGVVMPVNMQQCYYDSYNKTNDEPFNQPTYMNAYELTLIMWHSTLCRLDMYETFSWQVQNQPCMAGGRGLKHIWCYNQCPLKGKWFTFAAKLPCKDFYHQKDPFMEYFLPWCVGASPPDRDPNAWMCWWTFHKMSTWCFNYGYWTLDDMWVKCRCTASTTPYYYNDAGSHEKFFCEFQEYCACSCIVCKGSECYNECEQNYVGAQQMVAKRICWQIAENLKWMPIKTMRKWKTDGKREVICNFVQGAYAAWFKKCKMAYCGAALCCRISFHNVDYVPPFEYLQDSCMPFHWEPWDEQNKFKMQLYAWELYNIFATKKPTDFTDHGFRLEAEDHWVIQKNAFCGRSQCPFDECEYSLSNRHRPQYVRLNSDLWKCDNEKNRHDAMRIHYLRYHTVNETLGEQCFSEDNWQHDWTNSGHNKKPVAIITWYADYVNSYPITYRLRVDHCPAGLNGNMPNPQARMYTYQTCKMMPWTNEACTTHGTSWKWWSIQPWRLPNDVNELHCRWGDSHLSEDAACKSTPWGTHRYSECHRHCMYNHQAAMYWLPNDDHETSHTLGDLYMNWPGYMTVYKRWSYTMITMPCTMPDHQMTGGFYLDDPEVYKMFAKEGKVLSDSHRVPLAFHFGMVEEPVIALWQNHPTDPFWVVYYMLYPGACTYLHGQHIAFDVEGKIIHHDHTLSHNFMCRAKTEKPGNHCHCFSDHNGGQYVNARFNDATSDKDEQLMIWQESIYMKKRYDWDVKNKKNVQFYVPFTHTDLFSCNSTHSVCGNVCRNCSYYLCPGVHGLGMSEAMHSPRILPFFHSVYWMRTLAFQVRRPNLDKDPHYYQWGSWPECFWMGY'
s7 = 'VINLSVWKECPETRITYVWMSDPSIWMIMTPVWETEQHKAEIKSNFKTSACWDPNALQVWTKLRAYCINLAYSRKISKIIYEGIDGMHNINVGLCRQVGKMWPYHAIEYQDQVQSAIVSKQRHGWLMFVGEDNKMNWWWKFSQFFYFVDGHPFTSYLNFNGCVARGSFNTPWKLRNQALWYVSYMNKNYLCDPPKPRQCFDYWWVNEEELWNQFPHRMMVGHCTDHCQIFRKRPDAPICEVGFWEFGHTYVHGSEGQLLSMNMNLPWKRASGLPYLSEMMVMSDDWCLSIFLRRPLKMWNSWYEWFKSKPPETNWRKCKYAMNHYYPIRCKNEGPWYFKIKYDEVTHSPMQNHGEQFCCDWMVCQQFVVKNDVSHDMARFPPTNEHQAQTMEFYVWNAQCCSWMLIPFSLAEYHSDGNLHYTMRMSMWHCWEGAWEHTTYMDVPIQLFHKFECMMAYVACFIWPCRFGVMAQDVKYCACPVETAIYKYIEHAFVCKIGWHPSRSGSVRDSVASDDVYVLNRWYATHSLDIWGRPMCAVSQTELESIWITPFMKTGQRTPCMAHCEWLNIHARPSCECRAGNNNGTPMNTCWTGNCLWNMDFRVPQGGQAPTAKSDDHHCEFAAEDKSMELYVDNHSNGFMEFANHIVIKQVRYTECYASLNYYTTPRMSYDHWRGTLMSHFWRYDELQFRFIFEFVAMWIKKYWVCVAQAIYVIIYSEQRRPLPMSFAPCNPDTYCNMQACPAETEVCAHEVLMQNRKCNHTYCDTWYQFPMQSCRVDEDLELCEMIMMVRKGQLEMHDSVNIGDKQMTRCILRETGVEKYCSSRHEAFAVMPYTHYFPKIRMPCDTHQGLCHFPGLPWCPNHHQQIPPFSPKFLMKNERYDHGDVYFDPDTHWWSLGGAYNVLYNRTTTCICYYTRKFSGHVCWANTCHYMLKPTCPYYYIYKGNTVYVCYTNRCEESHTNEHNSTKRDNHRPINNQLYVDSCCCIWKVQNGNCFHFKQVLLSPKIYAWSDTACGSPRPFRVFYGPNAKDLQPADKMHNGYGGYDAQKVWNIWWHFGSVQADAWKYPWVNVTMRHQGNHRISWDQKNPMRKNDAITDACYQRHWPVLFRFNENCKDQVKSQMFPCTLAVHHMCKEDRWPMDRQGYAYDRQKSFFIHWWEVFCVCVYSLMFSPMKMLTRHKHENAHKWLESWVRQCVNWSRRPEYAMSSEFRWDGKTIREDIINERWWQWRAGFQASYSVGWTRRGWENDATNKTLIGTASSDYQGRGRLANAACRVYEEQDRVCGDWCYADLYWDAVYFIWAHTCVMFYCDDQWHCSAEMWLLWDRQYVNLDTCSICLTWKERTSWSSMAIWYGTHHDDLCSVHRKEPQIAQVFRVSFNSQRRWPRSRMTDQWYKTMLVDRQDQDLNVQVSDPTCPMEVQYQMEFSYMQYRYTKACTFDWIFSKYHFRQRKVCLWWPCCCGHLAQEEFVYVRMHLLVSFKITKMHNWHNHVPVNVDCCH'

def main():
    for s in [s4, s5]:
        run_measurement(s)


if __name__ == '__main__':
    main()